{"version":3,"sources":["assets/LandingPage.module.scss","pages/LandingPage.tsx","pages/WorkPage.tsx","pages/ProjectsPages.tsx","pages/ArtPage.tsx","components/Card.tsx","pages/AboutPage.tsx","pages/InterestsPage.tsx","App.tsx","serviceWorker.ts","index.tsx","assets/WorkPage.module.scss"],"names":["module","exports","LandingPage","title","useState","hoverState","setHoverState","styles","titleStyle","setTitleStyle","darkmode","setDarkMode","history","useHistory","useEffect","document","getElementById","innerHTML","handleClick","event","n","target","push","handleHoverCode","i","workFont","handleHoverProjects","codeFont","handleHoverArt","artFont","className","darkContainer","container","id","onClick","navRows","Button","classes","workButton","darkLabel","workLabel","onMouseEnter","onMouseLeave","WorkPage","Trigger","size","trigger","ProjectsPage","ArtPage","href","useStyles","makeStyles","root","minWidth","maxWidth","justifyContent","justifyItems","bullet","display","margin","transform","fontSize","pos","marginBottom","SimpleCard","Card","CardContent","Typography","color","gutterBottom","CardActions","AboutPage","style","alignItems","InterestsPage","App","basename","process","path","component","exact","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.3cb3fce4.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"LandingPage_title__yyv34\",\"workFont\":\"LandingPage_workFont__3zS4V\",\"codeFont\":\"LandingPage_codeFont__3CH4p\",\"artFont\":\"LandingPage_artFont__2zj6q\",\"workButton\":\"LandingPage_workButton__1TMhj\",\"workLabel\":\"LandingPage_workLabel__PsX2E\",\"darkLabel\":\"LandingPage_darkLabel__12xLP\",\"navRows\":\"LandingPage_navRows__yclJm\",\"container\":\"LandingPage_container__28WUm\",\"darkContainer\":\"LandingPage_darkContainer__i6TGF\"};","import React, { MouseEvent, useState, useEffect } from 'react';\nimport { Button } from '@material-ui/core';\nimport styles from '../assets/LandingPage.module.scss';\nimport { Link, useHistory } from 'react-router-dom';\nimport { EventEmitter } from 'events';\n\n// import Hello from '../assets/money.png';\n\n// yarn tsm src (the folder that holds the stuff you want definitions of )\n\nconst LandingPage: React.FC<{ title: string }> = ({ title }) => {\n\n    const [hoverState, setHoverState] = useState('Grant Brewster');\n    const [titleStyle, setTitleStyle] = useState(styles.title)\n    const [darkmode, setDarkMode] = useState(false);\n\n    const history = useHistory();\n\n    useEffect(() => {\n\n        // want this to actually render a different image for \"Grant Brewster\" on hover\n        document.getElementById('test')!.innerHTML = hoverState;\n        // return null;\n    });\n\n    const handleClick = (event: MouseEvent) => {\n\n        const n = event.target as HTMLInputElement;\n\n        history.push(`/${n.innerHTML}`);\n\n    };\n\n    const handleHoverCode = (i: boolean) => {\n        if (i) {\n            setHoverState(\"Work\");\n            setTitleStyle(styles.workFont);\n        } else {\n            setHoverState(\"Grant Brewster\");\n            setTitleStyle(styles.title);\n        };\n    };\n\n    const handleHoverProjects = (i: boolean) => {\n        if (i) {\n            setHoverState(\"Projects...|\");\n            setTitleStyle(styles.codeFont);\n            setDarkMode(true);\n        } else {\n            setHoverState(\"Grant Brewster\");\n            setTitleStyle(styles.title);\n            setDarkMode(false);\n        };\n    };\n\n    const handleHoverArt = (i: boolean) => {\n        if (i) {\n            setHoverState(\"Art\");\n            setTitleStyle(styles.artFont);\n        } else {\n            setHoverState(\"Grant Brewster\");\n            setTitleStyle(styles.title);\n        };\n    };\n\n    return (\n        <div className={darkmode ? styles.darkContainer : styles.container}>\n            <h1 id='test' className={titleStyle} onClick={() => history.push('/')} >Grant Brewster</h1>\n            <div className={styles.navRows}>\n                <Button classes={{ 'root': styles.workButton, 'label': darkmode ? styles.darkLabel : styles.workLabel }}\n                    onClick={handleClick}\n                    onMouseEnter={() => handleHoverCode(true)}\n                    onMouseLeave={() => handleHoverCode(false)}>work</Button>\n                <Button classes={{ 'root': styles.workButton, 'label': darkmode ? styles.darkLabel : styles.workLabel }}\n                    onClick={handleClick}\n                    onMouseEnter={() => handleHoverProjects(true)}\n                    onMouseLeave={() => handleHoverProjects(false)}>projects</Button>\n                <Button classes={{ 'root': styles.workButton, 'label': darkmode ? styles.darkLabel : styles.workLabel }}\n                    onClick={handleClick}\n                    onMouseEnter={() => handleHoverArt(true)}\n                    onMouseLeave={() => handleHoverArt(false)}>art</Button>\n            </div>\n        </div>\n\n    );\n}\n\nexport default LandingPage;","import React from 'react';\nimport styles from '../assets/WorkPage.module.scss';\nimport { Link, useHistory } from 'react-router-dom';\nimport { Button } from '@material-ui/core';\nimport Collapsible from 'react-collapsible';\n// yarn tsm src (the folder that holds the stuff you want definitions of )\nimport '../assets/WorkPage.module.scss';\n// maybe import app.css?\n\nconst WorkPage: React.FC = () => {\n\n    const history = useHistory();\n\n    const Trigger = () => <Button size=\"small\">More</Button>;\n\n    return (\n        <div>\n            <Button classes={{ 'root': styles.workButton,  'label': styles.workLabel}} onClick={() => history.push('/')}>Home</Button>\n            <div className={styles.container}>\n                <h1>Where have I worked?</h1>\n                <div className={styles.navRows}>\n                    <h2>X, The Moonshot Factory, SWE Intern on ML-infra and Data Science Teams</h2>\n                        <Collapsible trigger={<Trigger/>}>\n                        <h3>Tech Used:</h3>\n                            <p>ProtoBufs, Tensorflow 2, ML Interpretability, Pandas, GeoPandas, Google Cloud Storage,\n                                QGIS, Python, Google's BERT, UNet\n                            </p>\n                        </Collapsible>\n                    <h2>Mlkmn Technologies, Founding SWE</h2>\n                        <Collapsible trigger={<Trigger/>}>\n                        <h3>Tech Used:</h3>\n                                <h4>Firebase, AWS, Stripe, Typeform, React, Vue.js, Javascript/HTML/CSS\n                                </h4>\n                        </Collapsible>\n                    <h2>Trumid Financial, LLC, Rotational Intern</h2>\n                        <Collapsible trigger={<Trigger/>}>\n                        <h3>Tech Used:</h3>\n                                    <h4> Flask, Redis, D3, Javascript/HTML/CSS, Kafka, ProtoBufs, Docker, SocketIO\n                                    </h4>\n                        </Collapsible>\n                    <h2>Moe's Delivery Driver, Catering Driver</h2>\n                        <Collapsible trigger={<Trigger/>}>\n                        <h3>Tech Used:</h3>\n                                        <h4> The Moe's Van!\n                                        </h4>\n                        </Collapsible>\n                    <h2>Freelance Videographer, Sole Employee</h2>\n                        <Collapsible trigger={<Trigger/>}>\n                        <h3>Tech Used:</h3>\n                                    <h4> Final Cut Pro X, Adobe After Effects/Premiere Pro/Photoshop/Illustrator/Lightroom\n                                    </h4>\n                        </Collapsible>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default WorkPage;","import React from 'react';\nimport styles from '../assets/WorkPage.module.scss';\n\nimport { Link, useHistory } from 'react-router-dom';\nimport { Button } from '@material-ui/core';\n// yarn tsm src (the folder that holds the stuff you want definitions of )\n\nconst ProjectsPage: React.FC = () => {\n\n    const history = useHistory();\n\n    return (\n        <div>\n            <Button onClick={() => history.push('/')}>Home</Button>\n            <div className={styles.container}>\n                <h1>What Have I Done?</h1>\n                <div className={styles.navRows}>\n                    <h2>This website</h2>\n                    <h2>Mini-Minecraft</h2>\n                    <h2>Tour De Jersey</h2>\n                    <h2>MAD4kids/BnB</h2>\n                </div>\n            </div>\n        </div>\n\n    );\n}\n\nexport default ProjectsPage;","import React from 'react';\nimport { Link, useHistory } from 'react-router-dom';\nimport { Button } from '@material-ui/core';\n\n// yarn tsm src (the folder that holds the stuff you want definitions of )\n\nconst ArtPage: React.FC = () => {\n\n    const history = useHistory();\n\n    return (\n        <div>\n            <Button onClick={() => history.push('/')}>Home</Button>\n            <div >\n                <h1>Art</h1>\n                <h2>\n                    <a href='https://grantbrewster.wixsite.com/mysite'>Art Portfolio site</a>\n                    </h2>\n            </div>\n        </div>\n    );\n}\n\nexport default ArtPage;","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\n\n// .continerMember {\n//   align-items: center; /* NEW */\n//   display: flex;\n//   flex-direction: column;\n//   flex-wrap: wrap;\n//   align-content: center;\n//   justify-content: center;\n//   height: 4.2rem;\n//   list-style: none;\n//   padding: 0;\n//   border: 1px solid #000;\n//   border-radius: 5px;\n//   overflow: hidden;\n// }\n\nconst useStyles = makeStyles({\n  root: {\n    minWidth: 275,\n    maxWidth: 343,\n    justifyContent: 'center',\n    justifyItems: 'center'\n  },\n  bullet: {\n    display: 'inline-block',\n    margin: '0 2px',\n    transform: 'scale(0.8)',\n  },\n  title: {\n    fontSize: 14,\n  },\n  pos: {\n    marginBottom: 12,\n  },\n  \n});\n\nconst SimpleCard: React.FC<{title: string}> = ({title}) => {\n  const classes = useStyles();\n  const bull = <span className={classes.bullet}>•</span>;\n\n  return (\n    <Card className={classes.root}>\n      <CardContent>\n        <Typography className={classes.title} color=\"textPrimary\" gutterBottom>\n          {title}\n        </Typography>\n      </CardContent>\n      <CardActions>\n        <Button size=\"small\">Learn More</Button>\n      </CardActions>\n    </Card>\n  );\n}\n\nexport default SimpleCard;","import React from 'react';\nimport Card from '../components/Card'\nimport styles from '../assets/WorkPage.module.scss';\n\nimport { Link, useHistory } from 'react-router-dom';\nimport { Button } from '@material-ui/core';\n\n// yarn tsm src (the folder that holds the stuff you want definitions of )\n\nconst AboutPage: React.FC = () => {\n\n    const history = useHistory();\n\n    return (\n        <div>\n            <Button onClick={() => history.push('/')}>Home</Button>\n            <div className={styles.container}>\n                \n                <h1>About Page</h1>\n                <h2>Check out my LinkedIn, Github, WixSite, YouTube, Spotify, or my resume if you choose.</h2>\n                <ul style={{\n                    display: 'flex',\n                    alignItems: 'center',\n                    justifyContent: 'center',\n                }}>\n                    <div>\n                        <Card title={'Songs'} />\n                    </div>\n                    <li>\n                        <Card title={'Quotes'} />\n                    </li>\n                    <Card title={'Problems Worth Solving'} />\n                    <Card title={'Books'} />\n                    <Card title={'Social'} />\n                </ul>\n            </div>\n        </div>\n    );\n}\n\nexport default AboutPage;","import React from 'react';\nimport styles from '../assets/WorkPage.module.scss';\nimport { Link, useHistory } from 'react-router-dom';\nimport { Button } from '@material-ui/core';\n// yarn tsm src (the folder that holds the stuff you want definitions of )\n\nconst InterestsPage: React.FC = () => {\n\n    const history = useHistory();\n\n    return (\n        <div>\n            <Button onClick={() => history.push('/')}>Home</Button>\n            <div className={styles.container}>\n                <h1>Interests</h1>\n                <div className={styles.navRows}>\n                    <h2>Surfing</h2>\n                        <h3>Things Learned:</h3>\n                            <h4>The degradation of our environment, including our oceans, is the most important problem facing our existence. \n                            </h4>\n                    <h2>Snowboarding</h2>\n                        <h3>Tech Used:</h3>\n                                <h4>Firebase, AWS, Stripe, Typeform, React, Vue.js, Javascript/HTML/CSS\n                                </h4>\n                    <h2>Venture Capital</h2>\n                        <h3>Learnings:</h3>\n                                    <h4> Flask, Redis, D3, Javascript/HTML/CSS, Kafka, ProtoBufs, Docker, SocketIO\n                                    </h4>\n                    <h2>Moe's Delivery Driver, Catering Driver</h2>\n                        <h3>Tech Used:</h3>\n                                        <h4> The Moe's Van!\n                                        </h4>\n                    <h2>Freelance Videographer, Sole Employee</h2>\n                        <h3>Tech Used:</h3>\n                                    <h4> Final Cut Pro X, Adobe After Effects/Premiere Pro/Photoshop/Illustrator/Lightroom\n                                    </h4>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default InterestsPage;","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nimport {\n  BrowserRouter as Router,\n  Route,\n  Switch,\n} from 'react-router-dom'\n\nimport LandingPage from './pages/LandingPage'\nimport WorkPage from './pages/WorkPage'\nimport ProjectsPage from './pages/ProjectsPages'\nimport ArtPage from './pages/ArtPage'\nimport AboutPage from './pages/AboutPage'\nimport InterestsPage from './pages/InterestsPage'\n\n//  Router basename={process.env.PUBLIC_URL}\nfunction App() {\n  return (\n    <Router basename={process.env.PUBLIC_URL}>\n    <div className=\"App\">\n      <Switch>\n        <Route path='/' component={LandingPage} exact/>\n        <Route path='/work' component={WorkPage} exact/>\n        <Route path='/projects' component={ProjectsPage} exact/>\n        <Route path='/art' component={ArtPage} exact/>\n        <Route path='/about' component={AboutPage} exact/>\n        <Route path='/interests' component={InterestsPage} exact/>\n      </Switch>\n      {/* <LandingPage title={'Grant Brewster'}/> */}\n    </div>\n    </Router>\n  );\n}\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"WorkPage_title__gtaJ5\",\"workButton\":\"WorkPage_workButton__2WT8S\",\"workLabel\":\"WorkPage_workLabel__4MHkf\",\"navRows\":\"WorkPage_navRows__3iosH\",\"container\":\"WorkPage_container__3XpZy\",\"continerMember\":\"WorkPage_continerMember__30MTC\",\"Collapsible\":\"WorkPage_Collapsible__3mFzA\",\"Collapsible__contentOuter\":\"WorkPage_Collapsible__contentOuter__2i1I2\"};"],"sourceRoot":""}