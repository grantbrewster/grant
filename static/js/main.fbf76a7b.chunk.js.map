{"version":3,"sources":["assets/LandingPage.module.scss","pages/LandingPage.tsx","pages/NavBar.tsx","pages/WorkPage.tsx","components/Card.tsx","pages/ProjectsPages.tsx","pages/ArtPage.tsx","pages/AboutPage.tsx","pages/InterestsPage.tsx","App.tsx","serviceWorker.ts","index.tsx","assets/WorkPage.module.scss"],"names":["module","exports","LandingPage","title","useState","hoverState","setHoverState","styles","titleStyle","setTitleStyle","darkmode","setDarkMode","history","useHistory","useEffect","document","getElementById","innerHTML","handleClick","event","n","target","push","handleHoverCode","i","workFont","handleHoverProjects","codeFont","handleHoverArt","artFont","Box","height","alignItems","style","Grid","container","direction","justify","className","darkContainer","spacing","item","id","onClick","xs","Button","classes","workButton","darkLabel","workLabel","onMouseEnter","onMouseLeave","NavBar","startIcon","size","WorkPage","Trigger","navRows","trigger","useStyles","makeStyles","root","minWidth","maxWidth","justifyContent","justifyItems","bullet","display","margin","transform","fontSize","pos","marginBottom","SimpleCard","content","Card","CardContent","Typography","variant","color","gutterBottom","CardActions","List","dense","map","ListItem","divider","ProjectsPage","ArtPage","href","AboutPage","InterestsPage","App","basename","process","path","component","exact","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.fbf76a7b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"LandingPage_title__yyv34\",\"workFont\":\"LandingPage_workFont__3zS4V\",\"codeFont\":\"LandingPage_codeFont__3CH4p\",\"artFont\":\"LandingPage_artFont__2zj6q\",\"workButton\":\"LandingPage_workButton__1TMhj\",\"workLabel\":\"LandingPage_workLabel__PsX2E\",\"darkLabel\":\"LandingPage_darkLabel__12xLP\",\"navRows\":\"LandingPage_navRows__yclJm\",\"container\":\"LandingPage_container__28WUm\",\"darkContainer\":\"LandingPage_darkContainer__i6TGF\"};","import React, { MouseEvent, useState, useEffect } from 'react';\nimport { Button, Container, Grid} from '@material-ui/core';\nimport styles from '../assets/LandingPage.module.scss';\nimport { Link, useHistory } from 'react-router-dom';\nimport { EventEmitter } from 'events';\nimport Typography from '@material-ui/core/Typography';\n// import * as styles from '../assets/LandingPage.module.scss'\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport { sizing } from '@material-ui/system';\n\nimport Box from '@material-ui/core/Box';\n\nconst LandingPage: React.FC<{ title: string }> = ({ title }) => {\n\n    const [hoverState, setHoverState] = useState('Grant Brewster');\n    const [titleStyle, setTitleStyle] = useState(styles.title)\n    const [darkmode, setDarkMode] = useState(false);\n\n    const history = useHistory();\n\n    useEffect(() => {\n\n        // want this to actually render a different image for \"Grant Brewster\" on hover\n        document.getElementById('test')!.innerHTML = hoverState;\n        // return null;\n    });\n\n    const handleClick = (event: MouseEvent) => {\n\n        const n = event.target as HTMLInputElement;\n\n        history.push(`/${n.innerHTML}`);\n\n    };\n\n    const handleHoverCode = (i: boolean) => {\n        if (i) {\n            setHoverState(\"Work\");\n            setTitleStyle(styles.workFont);\n        } else {\n            setHoverState(\"Grant Brewster\");\n            setTitleStyle(styles.title);\n        };\n    };\n\n    const handleHoverProjects = (i: boolean) => {\n        if (i) {\n            setHoverState(\"Projects...|\");\n            setTitleStyle(styles.codeFont);\n            setDarkMode(true);\n        } else {\n            setHoverState(\"Grant Brewster\");\n            setTitleStyle(styles.title);\n            setDarkMode(false);\n        };\n    };\n\n    const handleHoverArt = (i: boolean) => {\n        if (i) {\n            setHoverState(\"Art\");\n            setTitleStyle(styles.artFont);\n        } else {\n            setHoverState(\"Grant Brewster\");\n            setTitleStyle(styles.title);\n        };\n    };\n\n    return (\n        <Box height=\"100%\" alignItems=\"stretch\" style={{height:\"100vh\"}}>\n        <Grid\n            container\n            direction=\"column\"\n            alignItems=\"stretch\"\n            justify=\"center\"\n            style={{height:\"100vh\"}}\n            className={darkmode ? styles.darkContainer : styles.container}\n        >   \n            <Grid container spacing={3}>\n                    <Grid item \n                            id=\"test\"\n                            className = {titleStyle}\n                            onClick={() => history.push('/')} >\n                            Grant Brewster\n                    </Grid>\n            </Grid>\n            <Grid container\n                direction=\"row\"\n                alignItems=\"center\"\n                justify=\"center\"\n                spacing={3}>\n                <Grid item xs={3}>\n                <Button classes={{ 'root': styles.workButton, 'label': darkmode ? styles.darkLabel : styles.workLabel }}\n                    onClick={handleClick}\n                    onMouseEnter={() => handleHoverCode(true)}\n                    onMouseLeave={() => handleHoverCode(false)}>work</Button>\n                </Grid>\n                <Grid item xs={3}>\n                <Button classes={{ 'root': styles.workButton, 'label': darkmode ? styles.darkLabel : styles.workLabel }}\n                    onClick={handleClick}\n                    onMouseEnter={() => handleHoverProjects(true)}\n                    onMouseLeave={() => handleHoverProjects(false)}>projects</Button>\n                </Grid>\n                <Grid item xs={3}>\n                <Button classes={{ 'root': styles.workButton, 'label': darkmode ? styles.darkLabel : styles.workLabel }}\n                    onClick={handleClick}\n                    onMouseEnter={() => handleHoverArt(true)}\n                    onMouseLeave={() => handleHoverArt(false)}>art</Button>\n                </Grid>\n            </Grid>\n        </Grid>\n        </Box>\n    );\n}\n\nexport default LandingPage;","import React from 'react';\nimport styles from '../assets/WorkPage.module.scss';\nimport { Link, useHistory } from 'react-router-dom';\nimport { Button } from '@material-ui/core';\nimport CodeIcon from '@material-ui/icons/Code';\nimport PhotoIcon from '@material-ui/icons/Photo';\nimport HomeIcon from '@material-ui/icons/Home';\nimport WorkIcon from '@material-ui/icons/Work';\nimport FaceIcon from '@material-ui/icons/Face';\n// yarn tsm src (the folder that holds the stuff you want definitions of )\nimport '../assets/WorkPage.module.scss';\n\nconst NavBar: React.FC = () => {\n    const history = useHistory();\n\n    return (\n        <div>\n            <Button\n                startIcon={< HomeIcon />}\n                size='large'\n                classes={{ 'label': styles.workLabel }}\n                onClick={() => history.push('/')}>\n                Home\n            </Button>\n            |\n            <Button\n                startIcon={< WorkIcon />}\n                size='large'\n                classes={{ 'label': styles.workLabel }}\n                onClick={() => history.push('/work')}>\n                Work\n            </Button>\n            |\n            <Button\n                startIcon={< CodeIcon />}\n                size='large'\n                classes={{ 'label': styles.workLabel }}\n                onClick={() => history.push('/projects')}>\n                Projects\n            </Button>\n            |\n            <Button\n                startIcon={< PhotoIcon />}\n                size='large'\n                classes={{ 'label': styles.workLabel }}\n                onClick={() => history.push('/art')}>\n                Art\n            </Button>\n            |\n            <Button\n                startIcon={< FaceIcon />}\n                size='large'\n                classes={{ 'label': styles.workLabel }}\n                onClick={() => history.push('/about')}>\n                About Me\n            </Button>\n        </div>\n    );\n}\n\nexport default NavBar;","import React from 'react';\nimport styles from '../assets/WorkPage.module.scss';\nimport { Link, useHistory } from 'react-router-dom';\nimport { Button } from '@material-ui/core';\nimport CodeIcon from '@material-ui/icons/Code';\nimport PhotoIcon from '@material-ui/icons/Photo';\nimport Collapsible from 'react-collapsible';\nimport HomeIcon from '@material-ui/icons/Home';\n// yarn tsm src (the folder that holds the stuff you want definitions of )\nimport '../assets/WorkPage.module.scss';\n\nimport NavBar from './NavBar';\n\n// maybe import app.css?\n\nconst WorkPage: React.FC = () => {\n\n    const history = useHistory();\n\n    const Trigger = () => <Button size=\"small\">More</Button>;\n\n    return (\n        <div>\n            <NavBar />\n            <div> Work Experience</div>\n            <div> Research Experience</div>\n            <div> School Involvement</div>\n            <div className={styles.container}>\n                <h1>Where have I worked?</h1>\n                <div className={styles.navRows}>\n                    <h2>X, The Moonshot Factory, SWE Intern on ML-infra and Data Science Teams</h2>\n                        <Collapsible trigger={<Trigger/>}>\n                        <h3>Tech Used:</h3>\n                            <p>ProtoBufs, Tensorflow 2, ML Interpretability, Pandas, GeoPandas, Google Cloud Storage,\n                                QGIS, Python, Google's BERT, UNet\n                            </p>\n                        </Collapsible>\n                    <h2>Mlkmn Technologies, Founding SWE</h2>\n                        <Collapsible trigger={<Trigger/>}>\n                        <h3>Tech Used:</h3>\n                                <h4>Firebase, AWS, Stripe, Typeform, React, Vue.js, Javascript/HTML/CSS\n                                </h4>\n                        </Collapsible>\n                    <h2>Trumid Financial, LLC, Rotational Intern</h2>\n                        <Collapsible trigger={<Trigger/>}>\n                        <h3>Tech Used:</h3>\n                                    <h4> Flask, Redis, D3, Javascript/HTML/CSS, Kafka, ProtoBufs, Docker, SocketIO\n                                    </h4>\n                        </Collapsible>\n                    <h2>Moe's Delivery Driver, Catering Driver</h2>\n                        <Collapsible trigger={<Trigger/>}>\n                        <h3>Tech Used:</h3>\n                                        <h4> The Moe's Van!\n                                        </h4>\n                        </Collapsible>\n                    <h2>Freelance Videographer, Sole Employee</h2>\n                        <Collapsible trigger={<Trigger/>}>\n                        <h3>Tech Used:</h3>\n                                    <h4> Final Cut Pro X, Adobe After Effects/Premiere Pro/Photoshop/Illustrator/Lightroom\n                                    </h4>\n                        </Collapsible>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default WorkPage;","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport Collapsible from 'react-collapsible';\nimport { Grid } from '@material-ui/core';\n\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\n\nconst useStyles = makeStyles({\n  root: {\n    minWidth: '20vh',\n    maxWidth: '50vh',\n    justifyContent: 'center',\n    justifyItems: 'center'\n  },\n  bullet: {\n    display: 'inline-block',\n    margin: '0 2px',\n    transform: 'scale(0.8)',\n  },\n  title: {\n    fontSize: 14,\n  },\n  pos: {\n    marginBottom: 12,\n  },\n  \n});\n\nconst SimpleCard: React.FC<{title: string, content:Array<String>}> = ({title, content}) => {\n  const classes = useStyles();\n\n\n  const Trigger = () => <Button size=\"small\">Learn More</Button>;\n\n  return (\n    <Card className={classes.root} style={{maxWidth: '100vh'}}>\n      <CardContent>\n        <Typography variant='h4' color=\"textPrimary\" gutterBottom>\n          {title}\n        </Typography>\n      </CardContent>\n      <CardActions>\n        <Grid\n            container\n            direction=\"column\"\n            justify=\"flex-start\"\n            alignItems=\"stretch\"\n          >\n        <Collapsible trigger={<Trigger/>}>\n          <Grid item>\n            <List dense={true}>\n              {content.map((item, i) => \n                <ListItem divider={true} >{item}</ListItem>)}\n            </List>\n          </Grid>\n        </Collapsible>\n        </Grid>\n      </CardActions>\n    </Card>\n  );\n}\n\nexport default SimpleCard;","import React from 'react';\nimport styles from '../assets/WorkPage.module.scss';\n\nimport { Link, useHistory } from 'react-router-dom';\nimport { Button } from '@material-ui/core';\nimport NavBar from './NavBar';\nimport Card from '../components/Card'\nimport { Container, Grid } from '@material-ui/core';\nimport Typography from '@material-ui/core/Typography';\n// yarn tsm src (the folder that holds the stuff you want definitions of )\n\nconst ProjectsPage: React.FC = () => {\n\n    const history = useHistory();\n\n    return (\n\n        <div>\n            {/* <Button onClick={() => history.push('/')}>Home</Button> */}\n            <NavBar />\n            <Grid  container\n                    direction=\"column\"\n                    justify=\"center\"\n                    alignItems=\"stretch\"\n                    spacing={8}\n            > \n                <Grid item >\n                <Typography variant='h1'>\n                    What Have I Done?\n                </Typography>\n                </Grid>\n                <Grid item>\n                <Typography variant='h2'>\n                    Code\n                </Typography>\n                </Grid>\n                <Grid\n                    container\n                    direction=\"column\"\n                    justify=\"center\"\n                    alignItems=\"center\"\n                    spacing={3}\n                >\n                    <Grid item>\n                        <Card title={'Full-Stack Distributed Search Engine (Mini-Google)'}\n                            content={['Multi-threaded, distributed Mercator-crawler ran on' +\n                                'AWS EC2 instances implemented with Apache Storm architecture, TF-' +\n                                'IDF/PageRank written in PySpark and deployed on an EMR cluster, React front-end/Spark Java backend hosted on EC2.']} />\n                    </Grid>\n                    <Grid item>\n                        <Card title={'Computer Vision for Agriculture Research funded by National Science Foundation (NSF)'}\n                            content={['Built a segmentation model to estimate leaf area/weight, leaf disease classifier, and ' +\n                                'deployed models to run in browser using' +\n                                'Tensorflow.js. Explored regressors and LSTMs for time-series data from the Autonomous Greenhouse Challenge.',\n                                'Research conducted with Dr. Rahul Mangharam for the Internet of Things for Precision Agriculture NSF Engineering Research Center.']} />\n                    </Grid>\n                    <Grid item>\n                        <Card title={'Satellite-Based Landslide Detection Using Convolutional Neural Networks (CNN)'}\n                            content={['Utilized geospatial tools like GeoPandas, QGis, and ArcGIS servers to create ' +\n                                'a dataset with positive/negative examples of landslides in' +\n                                ' Oregon. Built a CNN to predict locations with historical landslides,' +\n                                ' achieving an F1-score of 86.5% on a held-out test set.']} />\n                    </Grid>\n                    <Grid item>\n                        <Card title={'This Website'}\n                            content={['Typescript, HTML/SASS, React ']} />\n                    </Grid>\n                    <Grid item>\n                        <Card title={'Mini-Minecraft (CIS 560 Final project)'}\n                            content={['Typescript, HTML/SASS, React ']} />\n                    </Grid>\n                </Grid>\n                <Typography variant='h1'>\n                    Philanthropy\n                </Typography>\n                <Grid\n                    container\n                    direction=\"column\"\n                    justify=\"center\"\n                    alignItems=\"center\"\n                    spacing={3}\n                >\n                    <Grid item>\n                        <Card title={'TourDeJersey'}\n                            content={['In two weeks, trained for a 70 mile bike ride across New Jersey,' + \n                            'raised $20,000, and <had fun for charities helping social justice initiatives']} />\n                    </Grid>\n                    <Grid item>\n                        <Card title={'MAD4Kids (Make a Difference for Kids)'}\n                            content={['Founded in 7th grade, an initiative to raise money for annual service trips to Guatemala' + \n                            ', raising $100,000 over the course of 7 years.']} />\n                    </Grid>\n                    <Grid item>\n                        <Card title={'BnB'}\n                            content={['Organized parties across New Jersey to raise money for initiatives in Guatemala.']} />\n                    </Grid>\n                </Grid>\n            </Grid>\n        </div>\n\n    );\n}\n\nexport default ProjectsPage;","import React from 'react';\nimport { Link, useHistory } from 'react-router-dom';\nimport { Button } from '@material-ui/core';\nimport NavBar from './NavBar';\n\n// yarn tsm src (the folder that holds the stuff you want definitions of )\n\nconst ArtPage: React.FC = () => {\n\n    const history = useHistory();\n\n    return (\n        <div>\n            {/* <Button onClick={() => history.push('/')}>Home</Button> */}\n            <NavBar />\n            <div >\n                <h1>Art</h1>\n                <h2>\n                    <a href='https://grantbrewster.wixsite.com/mysite'>Art Portfolio site</a>\n                    </h2>\n            </div>\n        </div>\n    );\n}\n\nexport default ArtPage;","import React from 'react';\nimport Card from '../components/Card'\nimport styles from '../assets/WorkPage.module.scss';\n\nimport { Link, useHistory } from 'react-router-dom';\nimport { Button } from '@material-ui/core';\nimport NavBar from './NavBar'\n\n// yarn tsm src (the folder that holds the stuff you want definitions of )\n\nconst AboutPage: React.FC = () => {\n\n    const history = useHistory();\n\n    return (\n        <div>\n            <NavBar/>\n            <div className={styles.container}>\n                \n                <h1>About Page</h1>\n                <h2>Check out my LinkedIn, Github, WixSite, YouTube, Spotify, or my resume if you choose.</h2>\n                <ul style={{\n                    display: 'flex',\n                    alignItems: 'center',\n                    justifyContent: 'center',\n                }}>\n                    <Card title={'Songs'} content={['Song 1', 'Song 2']} /> \n                    <Card title={'Quotes'} content={['Here', 'There']}/>\n                    <Card title={'Problems Worth Solving'} content={['hello', 'yes']}/>\n                    <Card title={'Books'} content={['hello', 'yes']}/>\n                    <Card title={'Social'} content={['hello', 'yes']}/>\n                </ul>\n            </div>\n        </div>\n    );\n}\n\nexport default AboutPage;","import React from 'react';\nimport styles from '../assets/WorkPage.module.scss';\nimport { Link, useHistory } from 'react-router-dom';\nimport { Button } from '@material-ui/core';\n// yarn tsm src (the folder that holds the stuff you want definitions of )\n\nconst InterestsPage: React.FC = () => {\n\n    const history = useHistory();\n\n    return (\n        <div>\n            <Button onClick={() => history.push('/')}>Home</Button>\n            <div className={styles.container}>\n                <h1>Interests</h1>\n                <div className={styles.navRows}>\n                    <h2>Surfing</h2>\n                        <h3>Things Learned:</h3>\n                            <h4>The degradation of our environment, including our oceans, is the most important problem facing our existence. \n                            </h4>\n                    <h2>Snowboarding</h2>\n                        <h3>Tech Used:</h3>\n                                <h4>Firebase, AWS, Stripe, Typeform, React, Vue.js, Javascript/HTML/CSS\n                                </h4>\n                    <h2>Venture Capital</h2>\n                        <h3>Learnings:</h3>\n                                    <h4> Flask, Redis, D3, Javascript/HTML/CSS, Kafka, ProtoBufs, Docker, SocketIO\n                                    </h4>\n                    <h2>Moe's Delivery Driver, Catering Driver</h2>\n                        <h3>Tech Used:</h3>\n                                        <h4> The Moe's Van!\n                                        </h4>\n                    <h2>Freelance Videographer, Sole Employee</h2>\n                        <h3>Tech Used:</h3>\n                                    <h4> Final Cut Pro X, Adobe After Effects/Premiere Pro/Photoshop/Illustrator/Lightroom\n                                    </h4>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default InterestsPage;","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nimport {\n  BrowserRouter as Router,\n  Route,\n  Switch,\n} from 'react-router-dom'\n\nimport LandingPage from './pages/LandingPage'\nimport WorkPage from './pages/WorkPage'\nimport ProjectsPage from './pages/ProjectsPages'\nimport ArtPage from './pages/ArtPage'\nimport AboutPage from './pages/AboutPage'\nimport InterestsPage from './pages/InterestsPage'\nimport Typography from '@material-ui/core/Typography';\n\n//  Router basename={process.env.PUBLIC_URL}\nfunction App() {\n  return (\n    \n    <div className=\"App\">\n      <Router basename={process.env.PUBLIC_URL}>\n        <Switch>\n          <Route path='/' component={LandingPage} exact/>\n          <Route path='/work' component={WorkPage} exact/>\n          <Route path='/projects' component={ProjectsPage} exact/>\n          <Route path='/art' component={ArtPage} exact/>\n          <Route path='/about' component={AboutPage} exact/>\n          <Route path='/interests' component={InterestsPage} exact/>\n        </Switch>\n      </Router>\n    </div>\n    \n  );\n}\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"WorkPage_title__gtaJ5\",\"workButton\":\"WorkPage_workButton__2WT8S\",\"workLabel\":\"WorkPage_workLabel__4MHkf\",\"navRows\":\"WorkPage_navRows__3iosH\",\"container\":\"WorkPage_container__3XpZy\",\"continerMember\":\"WorkPage_continerMember__30MTC\",\"Collapsible\":\"WorkPage_Collapsible__3mFzA\",\"Collapsible__contentOuter\":\"WorkPage_Collapsible__contentOuter__2i1I2\"};"],"sourceRoot":""}